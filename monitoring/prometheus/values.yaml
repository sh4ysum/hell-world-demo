## SERVICES ENABLED
alertmanager:
  enabled: true
kube-state-metrics:
  enabled: true
prometheus-node-exporter:
  enabled: false
prometheus-pushgateway:
  enabled: false

## INGRESS
server:
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
        -  prometheus-demo.local ## LOCAL HOST FILE TO POINT TO EXTERNAL IP FROM NGINX INGRESS CONTROLLER
    path: /
    pathType: Prefix

## ALERTS
serverFiles:
  ## Ref: https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/
  alerting_rules.yml:
    groups:
      - name: container_alerts
        rules:
        ## CRITICAL
        - alert: RateOfDroppedPackets
          expr: rate(container_network_receive_packets_dropped_total[1m]) > 0
          for: 10m
          labels:
            severity: critical
          annotations:
            summary: Rate of dropped packets is greater than zero.
            description: "Rate dropped packets is greater than zero.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
        ## WARNING
        - alert: ContainerHighCpuRate
          expr: (sum by (instance) (avg by (mode, instance) (rate(container_cpu_system_seconds_total{mode!="idle"}[2m])))) > 0.8
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: Container high CPU load (instance {{ $labels.instance }})
            description: "Container CPU load is > 80%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"           

      - name: k8s_alerts
        rules:
        ## CRITICAL
        - alert: KubernetesPodNotHealthy
          expr: sum by (namespace, pod) (kube_pod_status_phase{phase=~"Pending|Unknown|Failed"}) > 0
          for: 15m
          labels:
            severity: critical
          annotations:
            summary: Kubernetes Pod not healthy (instance {{ $labels.instance }})
            description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-running state for longer than 15 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
        ## WARNING
        - alert: KubernetesHpaMetricsUnavailability
          expr: kube_horizontalpodautoscaler_status_condition{status="false", condition="ScalingActive"} == 1
          for: 0m
          labels:
            severity: warning
          annotations:
            summary: Kubernetes HPA metrics unavailability (instance {{ $labels.instance }})
            description: "HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler }} is unable to collect metrics\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
        ## INFO
        - alert: KubernetesHpaScaleMaximum
          expr: (kube_horizontalpodautoscaler_status_desired_replicas >= kube_horizontalpodautoscaler_spec_max_replicas) and (kube_horizontalpodautoscaler_spec_max_replicas > 1) and (kube_horizontalpodautoscaler_spec_min_replicas != kube_horizontalpodautoscaler_spec_max_replicas)
          for: 2m
          labels:
            severity: info
          annotations:
            summary: Kubernetes HPA scale maximum (instance {{ $labels.instance }})
            description: "HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler }} has hit maximum number of desired pods\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
